#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Feb 15 12:06:57 2022

@author: utkusenel
"""

import pandas as pd
import numpy as np
from statsmodels.stats.weightstats import ztest
import seaborn as sns
import scipy.stats as stats
import matplotlib.pyplot as plt
from matplotlib import pyplot
import statistics

df = pd.read_excel("/Users/utkusenel/Desktop/Practice(KFC)_UTKU.xlsx")
print(df.head())
print(df.columns)


print(df.columns)

one_hot = pd.get_dummies(df['GercekDurum'], 'GercekDurum')

df['GD_0'] = one_hot.GercekDurum_0
df['GD_1'] = one_hot.GercekDurum_1


buttons = ['Rutin', 'HedefOdagi', 'SorumlulukGorev', 'FirsatFayda',
       'Aile', 'SosyalKontak', 'TakdirEdilme', 'GuvendeOlma', 'Aktiflik',
       'Adalet', 'Analitik', 'SamimiOrtam', 'Takim', 'IknaEtme', 'StresIsYuku']


pop_mean = []     # Bütün verinin ortalamalarının toplandığı yer
pop_std_dev = []  # Bütün verinin standart sapmalarının toplandığı yer
pop_sample_size = len(df.index)   # Bütün verinin uzunluğu
alpha = 0.05  ## Confidence interval 




for idx, button in enumerate(buttons):
    
    
    new_df = df[[button, 'GD_0', 'GD_1']].groupby(button).sum().reset_index()
    new_df['Button'] = button
    new_df
    
    new_df.rename(columns = {button:'Points'}, inplace = True)
    
    total_GD_0 = new_df.GD_0.sum()
    total_GD_1 = new_df.GD_1.sum()
    
    new_df['Weighted_GD_0'] = new_df.GD_0 / total_GD_0
    new_df['Weighted_GD_1'] = new_df.GD_1 / total_GD_1
    
    
    if idx==0:
        final_df=new_df.copy()
    else:
        final_df = pd.concat([final_df, new_df])
    

    tst = final_df[final_df.Button == button][['Points', 'Weighted_GD_0', 'Weighted_GD_1', 'Button']]
    print(tst)
    
    tst[tst.Button == button][['Weighted_GD_0', 'Weighted_GD_1']]

    plt.bar(tst.Points, tst[tst.Button == button]['Weighted_GD_0'], alpha=0.8)
    plt.bar(tst.Points, tst[tst.Button == button]['Weighted_GD_1'], alpha=0.8)
    plt.title("Histogram for {}".format(button))
    plt.show()
    

means = final_df.groupby(by = "Button")[['Weighted_GD_0', 'Weighted_GD_1']].mean().reset_index()
std_dev = final_df.groupby(by = "Button")[['Weighted_GD_0', 'Weighted_GD_1']].std().reset_index()
medians = final_df.groupby(by = "Button")[['Weighted_GD_0', 'Weighted_GD_1']].median().reset_index()



standard_error_calisan = std_dev['Weighted_GD_1']/ np.sqrt(len(df[df.GercekDurum.eq(1)]))   
standard_error_ayrilan = std_dev['Weighted_GD_0']/ np.sqrt(len(df[df.GercekDurum.eq(0)]))   
standard_error_calisan = pd.DataFrame(standard_error_calisan)
standard_error_ayrilan = pd.DataFrame(standard_error_ayrilan)


buttons = [ 'Adalet', 'Aile', 'Aktiflik', 'Analitik','FirsatFayda', 'GuvendeOlma', 'HedefOdagi', 'IknaEtme', 
           'Rutin', 'SamimiOrtam', 'SorumlulukGorev', 'SosyalKontak', 'StresIsYuku', 'TakdirEdilme', 'Takim' ]

standard_error_ayrilan['Buttons'] = buttons
standard_error_calisan['Buttons'] = buttons


z_score_calisan = (means['Weighted_GD_1'] -  0.078125)/standard_error_calisan['Weighted_GD_1']
z_score_ayrilan = (means['Weighted_GD_0'] -  0.078125)/standard_error_ayrilan['Weighted_GD_0']
z_score_calisan = pd.DataFrame(z_score_calisan)
z_score_ayrilan = pd.DataFrame(z_score_ayrilan)
z_score_ayrilan['Buttons'] = buttons
z_score_calisan['Buttons'] = buttons
print("Çalışanlar için Z-SCORE:", z_score_calisan)
print("Ayrılanlar için Z-SCORE:", z_score_ayrilan)


p_value_calisan = (1-stats.norm.cdf(z_score_calisan['Weighted_GD_1']))
p_value_ayrilan = (1-stats.norm.cdf(z_score_ayrilan['Weighted_GD_0']))
p_value_calisan = pd.DataFrame(p_value_calisan)
p_value_ayrilan = pd.DataFrame(p_value_ayrilan)
p_value_ayrilan['Buttons'] = buttons
p_value_calisan['Buttons'] = buttons

print(p_value_calisan[0])
print(p_value_ayrilan)

"""
for p in range(0,15):
    
    if(p_value_calisan.iloc[0,p] <  alpha):
        print("Reject Null Hypothesis")
    else:
        print("Fail to Reject NUll Hypothesis")
    
    if(p_value_ayrilan.iloc[0,p] <  alpha):
        print("Reject Null Hypothesis") 
    else:
        print("Fail to Reject NUll Hypothesis")
"""



##MEAN RUTİN VALUE ASSOCIATED WITH THIS Z-SCORE
calisan_positive_z_critical = 1.96*standard_error_calisan['Weighted_GD_1']+means['Weighted_GD_1']
calisan_negative_z_critical = -1.96*standard_error_calisan['Weighted_GD_1']+means['Weighted_GD_1']

ayrilan_positive_z_critical = 1.96*standard_error_ayrilan['Weighted_GD_0']+means['Weighted_GD_0']
ayrilan_negative_z_critical = -1.96*standard_error_ayrilan['Weighted_GD_0']+means['Weighted_GD_0']


print(calisan_positive_z_critical,calisan_negative_z_critical)
print(ayrilan_positive_z_critical,ayrilan_negative_z_critical)



